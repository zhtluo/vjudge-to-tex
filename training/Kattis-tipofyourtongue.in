{'title': '', 'value': {'format': 'HTML', 'content': '\n    <p>Has this scenario ever happened to you? You’re having a\n    lovely conversation with someone, begin to say a word you’ve\n    used hundreds of times, and the word escapes your mind, leaving\n    you sputtering the first syllable. Well worry no more, because\n    the Institute for Cancelling Pauses in Conversation (ICPC) has\n    developed software to curtail this issue.</p>\n    <p>If there’s a word on the tip of your tongue, enter the first\n    few characters of the word into the ICPC software, and it will\n    tell you how many words in the dictionary have those characters\n    as a prefix. The ICPC quickly discovered that many of their\n    clients don’t only have tip-of-your-tongue problems, but also\n    base-of-your-tongue problems, where users only remember some\n    suffix of a word.</p>\n    <p>To be as useful as possible, the ICPC software needs to\n    support the following queries:</p>\n    <ol class="enumerate">\n      <li>\n        <p><tt class="ttfamily">AND</tt> <span class="tex2jax_process">$p$</span> <span class="tex2jax_process">$s$</span>. Count the number of words in\n        the dictionary that have <span class="tex2jax_process">$p$</span> as a prefix and <span class="tex2jax_process">$s$</span> as a suffix.</p>\n      </li>\n      <li>\n        <p><tt class="ttfamily">OR</tt> <span class="tex2jax_process">$p$</span> <span class="tex2jax_process">$s$</span>. Count the number of words in\n        the dictionary that have <span class="tex2jax_process">$p$</span> as a prefix or <span class="tex2jax_process">$s$</span> as a suffix.</p>\n      </li>\n      <li>\n        <p><tt class="ttfamily">XOR</tt> <span class="tex2jax_process">$p$</span> <span class="tex2jax_process">$s$</span>. Count the number of words in\n        the dictionary that have <span class="tex2jax_process">$p$</span> as a prefix or <span class="tex2jax_process">$s$</span> as a suffix, but not both.</p>\n      </li>\n    </ol>\n    <p>Prefixes and suffixes of a word may be the whole world, and\n    can overlap within the word. Due to a quirk in the ICPC\n    software, <span class="tex2jax_process">$p$</span> and\n    <span class="tex2jax_process">$s$</span> must be the same\n    length. You must help the software developers answer all the\n    incoming queries.</p>\n    <h2>Input</h2>\n    <p>The first line of input contains two integers <span class="tex2jax_process">$n$</span> and <span class="tex2jax_process">$q$</span> (<span class="tex2jax_process">$1\n    \\le n,q \\le 2 \\cdot 10^5$</span>), where <span class="tex2jax_process">$n$</span> is the number of words in the\n    dictionary and <span class="tex2jax_process">$q$</span> is the\n    number of queries.</p>\n    <p>Each of the next <span class="tex2jax_process">$n$</span>\n    lines contains a single string <span class="tex2jax_process">$w$</span>, which is a word in the\n    dictionary. All characters in dictionary words and queries are\n    lowercase Latin characters (‘<tt class="ttfamily">a</tt>’–‘<tt class="ttfamily">z</tt>’). All words in\n    the dictionary will be distinct.</p>\n    <p>Each of the next <span class="tex2jax_process">$q$</span>\n    lines contains three strings <span class="tex2jax_process">$o$</span>, <span class="tex2jax_process">$p$</span>, and <span class="tex2jax_process">$s$</span>, where <span class="tex2jax_process">$o$</span> is one of the operations\n    <tt class="ttfamily">‘AND’</tt>, <tt class="ttfamily">‘OR’</tt>, or <tt class="ttfamily">‘XOR’</tt>, and\n    <span class="tex2jax_process">$p$</span> and <span class="tex2jax_process">$s$</span> are strings of one or more\n    lowercase Latin characters (‘<tt class="ttfamily">a</tt>’—‘<tt class="ttfamily">z</tt>’) with\n    <span class="tex2jax_process">$|p| = |s|$</span>.</p>\n    <p>The total number of characters in the dictionary and across\n    all queries is at most <span class="tex2jax_process">$10^6$</span>; this does not include query\n    operations <tt class="ttfamily">‘AND’</tt>, <tt class="ttfamily">‘OR’</tt>, or <tt class="ttfamily">‘XOR’</tt>,\n    whitespace, or newline characters. Said another way, there are\n    at most <span class="tex2jax_process">$10^6$</span> lowercase\n    letters in the input.</p>\n    <h2>Output</h2>\n    <p>Output <span class="tex2jax_process">$q$</span> lines, one\n    per query, in the order the queries were given. On each line\n    output a single integer, which is the number of words in the\n    dictionary that match that particular query.</p>\n    <h2>Sample 1</h2><body><table class="vjudge_sample">\n<thead>\n  <tr>\n    <th>Input</th>\n    <th>Output</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td><pre>4 4\ncat\ncatcat\noctal\noccidental\nAND cat cat\nOR oc at\nAND ca at\nXOR oc al\n</pre></td>\n    <td><pre>2\n4\n2\n0\n</pre></td>\n  </tr>\n</tbody>\n</table>\n</body>\n  '}}
